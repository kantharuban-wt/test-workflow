name: "Build and Deploy"

on:
  workflow_dispatch:
    inputs:
      service:
        description: "Choose the service to build and deploy (CM, CD, ID)"
        required: true
        default: 'CM'
        type: choice
        options:
          - cm
          - cd
          - id
      environment:
        description: "Choose the environment to deploy (SIT, UAT, PROD)"
        required: true
        default: 'SIT'
        type: choice
        options:
          - SIT
          - UAT
          - PROD

env:
  STORAGE_ACCOUNT: cicdpipeline
  RESOURCE_GROUP: abc-2itest

jobs:
  

  build:
  
    runs-on: windows-latest
    timeout-minutes: 30

    env:
      ARTIFACT_NAME: ${{ github.event.inputs.service }}-artifact
      CONTAINER: ${{ github.event.inputs.service }}-artifacts
      GITHUB_EVENT_INPUTS_SERVICE: ${{ github.event.inputs.service }}
      GITHUB_EVENT_INPUTS_ENVIRONMENT: ${{ github.event.inputs.environment }}

    outputs:
      updated_var: ${{ steps.set_env.outputs.updated_var }}
    steps:

      - name: Convert service input to uppercase
        shell: pwsh
        run: |
          if (-not $env:GITHUB_EVENT_INPUTS_SERVICE) {
            Write-Error "GITHUB_EVENT_INPUTS_SERVICE is not set or is null."
            exit 1
          }

          $uppercaseService = $env:GITHUB_EVENT_INPUTS_SERVICE.ToUpper()
          $publishProfile = "${uppercaseService}_PUBLISH_PROFILE"
          $publishProfileENV = $env:GITHUB_EVENT_INPUTS_ENVIRONMENT
          $publishProfileName = "${publishProfileENV}.pubxml"
          $currentENV = "${publishProfileENV}_${uppercaseService}"

          @"
          SERVICE_UPPER=$uppercaseService
          PUBLISH_PROFILE=$publishProfile
          PUBLISH_PROFILE_NAME=$publishProfileName
          CURRENTENV=$currentENV
          "@ | Out-File -Append -FilePath $env:GITHUB_ENV

      - name: Echo environment variables
        shell: pwsh
        run: |
          echo "SERVICE_UPPER: $env:SERVICE_UPPER"
          echo "PUBLISH_PROFILE: $env:PUBLISH_PROFILE"
          echo "PUBLISH_PROFILE_NAME: $env:PUBLISH_PROFILE_NAME"
          echo "CURRENTENV: $env:CURRENTENV"

      - name: Set output variable
        id: set_env
        #run: echo "::set-output name=updated_var::CURRENTENV"
        run: |
            echo "updated_var=$env:CURRENTENV" >> $env:GITHUB_OUTPUT
        
      - name: building frontend
        if: ${{ github.event.inputs.service == 'cm' || github.event.inputs.service == 'cd' }}
        uses: ./.github/actions/frontend-build
  
  deploy:
    runs-on: windows-latest
    needs: build
    steps:
      - name: Use output from build job
        run: "echo 'Updated Variable: ${{ needs.build.outputs.updated_var }}'"